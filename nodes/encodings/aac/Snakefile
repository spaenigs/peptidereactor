from modlamp.core import read_fasta

import os
os.environ["R_LIBS_USER"] = "."

rule generate_aac_encoding:
    input:
         # "data/{dataset}/annotated_seqs.fasta",
         # "data/{dataset}/annotated_classes.txt"
         config["fasta_in"],
         config["classes_in"]

    output:
          config["csv_out"]
          # "data/{dataset}/csv/aac.csv"
    run:
        # import encoder.ifeature.param_free.encoder as param_free_encoder
        # seqs, names = read_fasta(str(input[0]))
        # with open(str(input[1])) as f:
        #     classes = list(map(lambda l: int(l.rstrip()), f.readlines()))
        # in_da = ([[n, s] for s, n in zip(seqs, names)], classes)
        # for df in param_free_encoder.AACEncoder(
        #     in_data=in_da, cores=4).encode():
        #     df.to_csv(str(output))
        shell("cp {input[0]} {output}")

