from modlamp.core import read_fasta

import re
import os

TOKEN = config["token"]

rule check:
    input:
         config["fasta_in"]
    output:
         config["report_out"]
    run:
         seqs, names = read_fasta(input[0])

         report = []
         for name, seq in zip(names, seqs):
             if re.search("\d+", seq) is not None:
                 report += [f"found number in sequence {name}: {seq}"]

         if len(report) > 0:
             with open(output[0], "a") as f:
                 for r in report:
                     f.write(f"{r}\n")
                     f.flush()
         else:
             shell("touch {output[0]}")

onsuccess:
    if os.path.getsize(config["report_out"]) > 0:
        with open(config["report_out"]) as f:
            for line in f.readlines():
                print(line.upper())
        raise AssertionError("Found invalid sequences! Check report for details.".upper())