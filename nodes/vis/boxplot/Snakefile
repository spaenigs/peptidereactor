import altair as alt
import pandas as pd
import numpy as np

rule generate_svg:
    input:
         config["metrics_dir_in"]
    output:
         config["svg_out"]
    run:
         def get_melt(df):
             return pd.melt(df, id_vars=["fold"], value_vars=list(df.columns)[:-1],
                            var_name="Encoding", value_name="F1")

         df = pd.read_csv(input[0], index_col=0)

         means = df.apply(np.mean)

         df["fold"] = df.index

         df_tmp = get_melt(df)
         boxplot = \
             alt.Chart(df_tmp.loc[df_tmp["Encoding"].isin(means.loc[means >= 0.8].index), :])\
                 .mark_boxplot(size=3)\
                 .encode(x='F1:Q', y='Encoding:O')

         dist = \
             alt.Chart(pd.DataFrame(means, columns=["F1"]).iloc[:-1, :])\
                 .mark_bar()\
                 .encode(alt.X("F1:Q", bin=alt.Bin(maxbins=150)), y='count()')

         line = alt.Chart(pd.DataFrame({"m": [0.5]}))\
             .mark_rule(color='red', opacity=0.2)\
             .encode(x='m:Q')

         alt.hconcat(boxplot+line, dist).save('bp.html')