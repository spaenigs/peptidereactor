from glob import glob

import os

TOKEN = config["token"]

CSV_SEQ_DIR = config["csv_seq_in"]
CSVS_SEQ_IN = glob(config["csv_seq_in"] + "*.csv")

CSV_STR_DIR = config["csv_str_in"]
CSVS_STR_IN = glob(config["csv_str_in"] + "*.csv")

NAMES_SEQ = [os.path.basename(p).replace(".csv", "") for p in CSVS_SEQ_IN]
NAMES_STR = [os.path.basename(p).replace(".csv", "") for p in CSVS_STR_IN]

rule all:
    input:
         expand(config["cv_dir_out"] + f"y_true_cv_{{name}}.csv", name=NAMES_SEQ),
         expand(config["cv_dir_out"] + f"y_pred_cv_{{name}}.csv", name=NAMES_SEQ),
         expand(config["cv_dir_out"] + f"y_prob_cv_{{name}}.csv", name=NAMES_SEQ),
         expand(config["cv_dir_out"] + f"y_true_cv_{{name}}.csv", name=NAMES_STR),
         expand(config["cv_dir_out"] + f"y_pred_cv_{{name}}.csv", name=NAMES_STR),
         expand(config["cv_dir_out"] + f"y_prob_cv_{{name}}.csv", name=NAMES_STR)

rule train_seq:
    input:
         f"{CSV_SEQ_DIR}{{name}}.csv"
    output:
         config["cv_dir_out"] + f"y_true_cv_{{name}}.csv",
         config["cv_dir_out"] + f"y_pred_cv_{{name}}.csv",
         config["cv_dir_out"] + f"y_prob_cv_{{name}}.csv",
         config["cv_dir_out"] + f"feat_imp_cv_{{name}}.csv",
         config["cv_dir_out"] + f"seqs_cv_{{name}}.csv"
    script:
         "../scripts/cv.py"

rule train_str:
    input:
         f"{CSV_STR_DIR}{{name}}.csv"
    output:
         config["cv_dir_out"] + f"y_true_cv_{{name}}.csv",
         config["cv_dir_out"] + f"y_pred_cv_{{name}}.csv",
         config["cv_dir_out"] + f"y_prob_cv_{{name}}.csv",
         config["cv_dir_out"] + f"feat_imp_cv_{{name}}.csv",
         config["cv_dir_out"] + f"seqs_cv_{{name}}.csv"
    script:
         "../scripts/cv.py"

 # for i in range(50):
 #     y_pred = df.iloc[i, :190].dropna()
 #     y_true = df.iloc[i, 190:].dropna()
 #     print((len(y_pred), len(y_true)))
 #     print(matthews_corrcoef(y_true, y_pred))