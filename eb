#!/usr/bin/env python

import yaml
import os
import glob
import sys

from snakemake import shell


def check_input_files(node_name, required_files, data_dir):
    is_ = (os.path.basename(p) for p in glob.glob(data_dir + "/*"))
    if len(list(filter(lambda p: p in required_files, is_))) != len(required_files):
        raise FileNotFoundError(f"Node '{node_name}' requires the following "
                                f"files to be present: {required_files}")


def get_files_str(files_dict):
    return " ".join([f"{k}={v}" for k, v in files_dict.items()])


def replace_dataset_name(input_dict, dataset):
    for k in input_dict.keys():
        input_dict[k] = input_dict[k].replace("*", dataset)
    return input_dict

project_yaml = sys.argv[1]
dataset = sys.argv[2]
root = os.getcwd()
script_dir = root + "/scripts"
data_dir = root + "/data"

with open(project_yaml, 'r') as stream:
    y = yaml.safe_load(stream)

db_dir = y["db"]

for node in y["order"]:

    os.chdir(y["nodes"][node]["path"])

    with open("node.yaml", 'r') as stream:
        y_node = yaml.safe_load(stream)

    input_files_dict = replace_dataset_name(y["nodes"][node]["input"], dataset)
    output_files_dict = replace_dataset_name(y["nodes"][node]["output"], dataset)

    check_input_files(node_name=y_node["node_name"],
                      required_files=input_files_dict.values(),
                      data_dir=root + "/data")

    in_files_str = get_files_str(input_files_dict)
    out_files_str = get_files_str(output_files_dict)
    print(in_files_str)
    print(out_files_str)

    shell(f"""source {script_dir}/setup.sh \
                     {y_node['node_group']} \
                     {y_node['node_name']} \
                     '{y_node['env']}'
              sh {script_dir}/exec.sh \
                 {os.getcwd()} {root} {db_dir} \
                 '--config dataset={dataset} {in_files_str} {out_files_str}'""")

    os.chdir(root)
