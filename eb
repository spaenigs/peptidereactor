#!/usr/bin/env python

import yaml
import os
import glob
import sys

from snakemake import shell


def check_input_files(node_name, required_files, data_dir):
    is_ = (os.path.basename(p) for p in glob.glob(data_dir + "/*"))
    if len(list(filter(lambda p: p in required_files, is_))) != len(required_files):
        raise FileNotFoundError(f"Node '{node_name}' requires the following "
                                f"files to be present: {required_files}")


def get_input_files_str(required_files):
    return " ".join([f"input_file_{i}=data/{required_files[i]}"
                     for i in range(len(required_files))])


def get_output_files_str(required_files):
    return " ".join([f"output_file_{i}=data/{required_files[i]}"
                     for i in range(len(required_files))])

project_yaml = sys.argv[1]
dataset = sys.argv[2]
root = os.getcwd()
script_dir = root + "/scripts"
data_dir = root + "/data"

with open(project_yaml, 'r') as stream:
    y = yaml.safe_load(stream)

db_dir = y["db"]

for node in y["order"]:

    os.chdir(y["nodes"][node]["path"])

    with open("node.yaml", 'r') as stream:
        y_node = yaml.safe_load(stream)

    required_input_files = list(map(lambda f: f.replace("*", dataset),
                                    y["nodes"][node]["input"]))

    required_output_files = list(map(lambda f: f.replace("*", dataset),
                                     y["nodes"][node]["output"]))

    check_input_files(node_name=y_node["node_name"],
                      required_files=required_input_files,
                      data_dir=root + "/data")

    in_files = get_input_files_str(required_input_files)
    out_files = get_output_files_str(required_output_files)

    shell(f"""source {script_dir}/setup.sh \
                     {y_node['node_group']} \
                     {y_node['node_name']} \
                     '{y_node['env']}'
              sh {script_dir}/exec.sh \
                 {os.getcwd()} {root} {db_dir} \
                 '--config dataset={dataset} {in_files} {out_files}'""")

    os.chdir(root)
